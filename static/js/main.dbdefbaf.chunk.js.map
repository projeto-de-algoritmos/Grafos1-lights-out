{"version":3,"sources":["utils/board.js","Components/Cell/index.js","Components/Board/index.js","Components/NeonText/index.js","Components/UserBoard/index.js","Components/BFSBoard/index.js","utils/BoardSolver.js","Components/Game/index.js","Components/Login/index.js","Components/Home/index.js","App.js","index.js"],"names":["createBoard","rows","cols","changeLightStartOn","board","Array","from","length","map","_","row","push","Math","random","toggleAdjCells","x","y","newBoard","Object","toConsumableArray","toggleCell","Cell","_ref","isLit","player1","react_default","a","createElement","className","onClick","Board","handleCellClick","cellSpacing","arr","key","val","Components_Cell","concat","NeonText","first","second","UserBoard","username","initialBoard","setHasUserWon","_React$useState","React","useState","JSON","parse","stringify","_React$useState2","slicedToArray","setBoard","console","log","Components_NeonText","Components_Board","every","setTimeout","BFSBoard","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","counter","myLoop","cheatSet","setState","setHasBFSWon","alert","Component","N","moves","fill","parent","i","position","matrix","solve","dims","s","matrixToHash","ans","s0","queue","shift","m","hashToMatrix","play","bfs","backtrack","pos","Game","chanceLightStartOn","hasUserWon","_React$useState3","_React$useState4","hasBFSWon","testBoard","isArray","_React$useState5","_React$useState6","button","style","marginTop","window","location","reload","Fragment","Components_UserBoard","Components_BFSBoard","Login","setUserName","value","onChange","e","target","placeholder","Home","logUserIn","login","setLogin","src_Components_Login","classNames","disabled","App","startGame","setStartGame","src_Components_Game","src_Components_Home","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dbdefbaf.chunk.js","sourcesContent":["export const createBoard = (rows, cols, changeLightStartOn) => {\n\n  // return Array(rows).fill(0).map(() => Array(cols).fill(Math.random() < changeLightStartOn ? 1 : 0))\n  let board = []\n  Array.from({ length: rows }).map(_ => {\n    let row = []\n    Array.from({ length: cols }).map(_ => row.push(Math.random() < changeLightStartOn))\n    board.push(row)\n  })\n  return board\n}\n\nexport const toggleAdjCells = (board, rows, cols, x, y) => {\n  const newBoard = [...board]\n\n  toggleCell(x, y)\n  toggleCell(x - 1, y)\n  toggleCell(x + 1, y)\n  toggleCell(x, y - 1)\n  toggleCell(x, y + 1)\n\n  function toggleCell(x, y) {\n    if ((x >= 0 && x < rows) && (y >= 0 && y < cols))\n      newBoard[x][y] ^= 1\n  }\n\n  return newBoard\n}\n\n// export const cheatSet = () =>","import React from 'react'\nimport './style.css'\n\nconst Cell = ({ isLit, toggleCell, player1 }) => <td className={\"cell\" + (isLit ? (player1 ? \" cell-lit-orange\" : \" cell-lit-blue\") : \"\")}\n  onClick={toggleCell} />\n\nexport default Cell","import React from 'react'\nimport Cell from '../Cell/index'\n\nconst Board = ({ board, rows, cols, handleCellClick, player1 }) => (\n  <table className=\"board\" cellSpacing=\"4\">\n    <tbody>\n      {board.map((arr, x) =>\n        <tr key={x}>\n          {arr.map((val, y) =>\n            <Cell key={`${x}-${y}`} isLit={val} player1={player1}\n              toggleCell={() => handleCellClick(board, rows, cols, x, y)} />)}\n        </tr>\n      )}\n    </tbody>\n  </table>\n)\n\nexport default Board","import React from 'react'\nimport './style.css'\n\nconst NeonText = ({ first, second }) => (\n  <div className=\"text-container\">\n    <div className=\"neon-orange\">{ first }</div>\n    <div className=\"neon-blue\">{ second }</div>\n  </div>\n)\n\nexport default NeonText","import React from 'react'\nimport { toggleAdjCells } from '../../utils/board'\nimport Board from '../Board/index'\nimport NeonText from '../NeonText/index'\nimport './style.css'\n\nconst UserBoard = ({ username, rows, cols, initialBoard, setHasUserWon, player1 }) => {\n\n  const [board, setBoard] = React.useState(JSON.parse(JSON.stringify(initialBoard)))\n\n  const handleCellClick = (board, rows, cols, x, y) => {\n    setBoard(toggleAdjCells(board, rows, cols, x, y))\n    const hasWon = board.every(arr => arr.every(val => !val))\n    hasWon && setTimeout(() => setHasUserWon(true), 250)\n  }\n  console.log('UserBoar', player1)\n  return (\n    <div className=\"col-spacing\">\n      <NeonText first={username} />\n      <Board board={board} rows={rows} cols={cols} handleCellClick={handleCellClick} player1={player1} />\n    </div>\n  )\n}\n\nexport default UserBoard","import React from 'react'\nimport Board from '../Board/index'\nimport NeonText from '../NeonText/index'\nimport { toggleAdjCells } from '../../utils/board'\n\nclass BFSBoard extends React.Component {\n\n  state = {\n    board: JSON.parse(JSON.stringify(this.props.initialBoard)),\n    counter: 0\n  }\n\n  myLoop = () => {\n    setTimeout(() => {\n\n      const newBoard = toggleAdjCells(this.state.board, this.props.rows, this.props.cols, this.props.cheatSet[this.state.counter][0] - 1, this.props.cheatSet[this.state.counter][1] - 1)\n\n      this.setState({ board: newBoard })\n      const hasWon = this.state.board.every(arr => arr.every(val => !val))\n      hasWon && setTimeout(() => this.props.setHasBFSWon(true), 200)\n\n      this.setState({ counter: this.state.counter + 1 })\n\n      if (this.state.counter < this.props.cheatSet.length) {\n        this.myLoop();\n      }\n    }, 2500)\n  }\n\n  constructor(props) {\n    super(props)\n    this.myLoop()\n  }\n\n  render() {\n    console.log('BFSBoard', this.props.player1)\n    return (\n      <div className=\"col-spacing\">\n        <NeonText second=\"BFS\" />\n        <Board board={this.state.board} rows={this.props.rows} cols={this.props.cols} handleCellClick={() => alert(\"Don't touch me!\")}\n          player1={this.props.player1} />\n      </div>\n    )\n  }\n}\n\nexport default BFSBoard","const MAX = 70000\nlet N = null\nlet moves = Array(MAX).fill(-1)\nlet parent = Array.from({ length: MAX }).map((_, i) => i)\nlet position = []\nlet cheatSet = []\nlet matrix = Array(10).fill(0).map(() => Array(10).fill(0))\n\nexport function solve(dims, board) {\n  N = dims;\n\n  for (let x = 1; x <= N; x++) {\n    for (let y = 1; y <= N; y++) {\n      matrix[x][y] = board[x - 1][y - 1]\n    }\n  }\n\n  const s = matrixToHash(N)\n  moves[s] = 0\n  const ans = bfs(N, s)\n\n  if (ans !== 0) {\n    return []\n  }\n\n  if (moves[ans]) backtrack(ans)\n  return cheatSet\n}\n\nfunction matrixToHash(N) {\n\n  let state = 0\n  for (let x = 1; x <= N; x++) {\n    for (let y = 1; y <= N; y++) {\n      state <<= 1\n      state |= matrix[x][y]\n    }\n  }\n  return state\n}\n\nfunction hashToMatrix(N, state) {\n\n  for (let x = N; x >= 1; x--) {\n    for (let y = N; y >= 1; y--) {\n      matrix[x][y] = state & 1\n      state >>= 1\n    }\n  }\n}\n\nfunction play(x, y) {\n  let dirs = [[0, -1], [-1, 0], [0, 0], [1, 0], [0, 1]]\n  dirs.map(pos => matrix[x + pos[0]][y + pos[1]] ^= 1)\n}\n\nfunction bfs(N, s0) {\n\n  let queue = []\n  queue.push(s0)\n  let state = -1\n\n  while (queue.length > 0) {\n\n    state = queue.shift()\n    let m = moves[state]\n\n    if (state === 0) break\n\n    hashToMatrix(N, state)\n\n    for (let x = 1; x <= N; x++) {\n      for (let y = 1; y <= N; y++) {\n        play(x, y)\n\n        let s = matrixToHash(N)\n\n        if (moves[s] === -1) {\n          moves[s] = m + 1\n          parent[s] = state\n          position[s] = [x, y]\n          queue.push(s)\n        }\n\n        play(x, y)\n      }\n    }\n  }\n\n  return state\n}\n\nfunction backtrack(s) {\n  if (s === parent[s]) return\n  backtrack(parent[s])\n  cheatSet.push([position[s][0], position[s][1]])\n}","import React from 'react'\nimport UserBoard from '../UserBoard/index'\nimport BFSBoard from '../BFSBoard/index'\nimport { createBoard } from '../../utils/board'\nimport NeonText from '../NeonText/index'\nimport { solve } from '../../utils/BoardSolver'\n\nimport './index.css'\n\nconst Game = ({ username, rows, cols, chanceLightStartOn }) => {\n\n  const [hasUserWon, setHasUserWon] = React.useState(false)\n  const [hasBFSWon, setHasBFSWon] = React.useState(false)\n\n  let testBoard = createBoard(rows, cols, chanceLightStartOn)\n  let cheatSet = solve(rows, testBoard)\n\n  while ((!Array.isArray(cheatSet) || !cheatSet.length) && (!hasBFSWon && !hasUserWon)) {\n    testBoard = createBoard(rows, cols, chanceLightStartOn)\n    cheatSet = solve(rows, testBoard)\n  }\n\n  const [initialBoard, setInitialBoard] = React.useState(testBoard)\n\n  const button = <button className='btn btn-primary' style={{ marginTop: \"3rem\" }} onClick={() => window.location.reload()}>\n    Play Again :D\n  </button>\n\n  return (\n    <div className={hasBFSWon || hasUserWon ? null : \"game\"}>\n      {hasUserWon ?\n        <>\n          <NeonText first=\"User\" second=\"Won\" />\n          {button}\n        </>\n        : hasBFSWon ?\n          <>\n            <NeonText first=\"BFS\" second=\"Won\" />\n            {button}\n          </> :\n          <>\n            <UserBoard username={username} rows={rows} cols={cols} initialBoard={initialBoard} setHasUserWon={setHasUserWon} player1={true} />\n            <BFSBoard rows={rows} cols={cols} initialBoard={initialBoard} setHasBFSWon={setHasBFSWon} cheatSet={cheatSet} player1={false} />\n          </>}\n    </div>\n  )\n}\n\nexport default Game","import React from 'react'\nimport './index.css'\n\nconst Login = ({ username, setUserName }) => (\n  <label>\n    What do people call you ?\n    <input  className={username ? \"valid\" : null} value={ username } onChange={e => setUserName(e.target.value) }\n            placeholder=\"type here...\"/>\n  </label>\n)\n\nexport default Login","import React from 'react'\nimport classNames from 'classnames'\nimport NeonText from '../NeonText/index'\nimport Login from '../Login/index'\nimport './index.css'\n\nconst Home = ({ username, setUserName, logUserIn }) => {\n  const [login, setLogin] = React.useState(false)\n  const getLoginComponent = () => <Login username={username} setUserName={setUserName} />\n\n  return (\n    <div className=\"home\">\n      <NeonText first=\"Lights\" second=\"Out\" />\n\n      <div className=\"auth-container\">\n        <h2 className=\"auth-cta\">Let's play!</h2>\n        {login ? getLoginComponent() : null}\n        <button className={classNames('btn', 'btn-primary', { 'disabled': login && !username })}\n          onClick={!login ? () => setLogin(true) : () => logUserIn()}>\n          {login ? 'Enter' : 'Login'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react';\nimport Game from './Components/Game/index'\nimport Home from './Components/Home/index'\nimport './App.css'\nimport './utils/animation.css'\n\nfunction App() {\n  const [startGame, setStartGame] = React.useState(false)\n  const [username, setUserName] = React.useState('')\n\n  const logUserIn = () => {\n    setStartGame(true)\n  }\n\n  return !startGame\n    ? <Home username={username} setUserName={setUserName} logUserIn={logUserIn} />\n    : <Game username={username} rows={4} cols={4} chanceLightStartOn={.7} />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}